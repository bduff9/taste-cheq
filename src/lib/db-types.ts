/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _PrismaMigrations {
  applied_steps_count: Generated<number>;
  checksum: string;
  finished_at: Timestamp | null;
  id: string;
  logs: string | null;
  migration_name: string;
  rolled_back_at: Timestamp | null;
  started_at: Generated<Timestamp>;
}

export interface GeminiUsage {
  count: Generated<number>;
  created: Generated<Timestamp>;
  id: string;
  month: string;
  updated: Timestamp;
  userId: string;
}

export interface MenuItem {
  category: string | null;
  created: Generated<Timestamp>;
  createdById: string | null;
  customFields: Json | null;
  deleted: Timestamp | null;
  deletedById: string | null;
  description: string;
  id: string;
  imageUrl: string | null;
  name: string;
  price: Numeric | null;
  restaurantId: string;
  updated: Timestamp | null;
  updatedById: string | null;
}

export interface Rating {
  created: Generated<Timestamp>;
  createdById: string | null;
  deleted: Timestamp | null;
  deletedById: string | null;
  id: string;
  imageUrl: string | null;
  menuItemId: string;
  stars: number;
  text: string | null;
  updated: Timestamp | null;
  updatedById: string | null;
  userId: string;
}

export interface RatingUsage {
  count: Generated<number>;
  created: Generated<Timestamp>;
  id: string;
  month: string;
  updated: Timestamp;
  userId: string;
}

export interface Restaurant {
  address: string;
  created: Generated<Timestamp>;
  createdById: string | null;
  deleted: Timestamp | null;
  deletedById: string | null;
  googlePlaceId: string;
  id: string;
  latitude: number;
  longitude: number;
  name: string;
  updated: Timestamp | null;
  updatedById: string | null;
}

export interface Session {
  createdAt: Generated<Timestamp>;
  expiresAt: Timestamp;
  id: string;
  userId: string;
}

export interface Subscription {
  created: Generated<Timestamp>;
  expires: Timestamp | null;
  id: string;
  started: Generated<Timestamp>;
  status: string;
  stripeId: string | null;
  type: string;
  updated: Timestamp;
  userId: string;
}

export interface TriedItem {
  created: Generated<Timestamp>;
  createdById: string | null;
  deleted: Timestamp | null;
  deletedById: string | null;
  id: string;
  menuItemId: string;
  updated: Timestamp | null;
  updatedById: string | null;
  userId: string;
}

export interface User {
  avatarUrl: string | null;
  created: Generated<Timestamp>;
  createdById: string | null;
  deleted: Timestamp | null;
  deletedById: string | null;
  email: string;
  homeCity: string | null;
  homeState: string | null;
  id: string;
  isAdmin: Generated<boolean>;
  name: string;
  passwordHash: string;
  updated: Timestamp | null;
  updatedById: string | null;
}

export interface DB {
  _prisma_migrations: _PrismaMigrations;
  GeminiUsage: GeminiUsage;
  MenuItem: MenuItem;
  Rating: Rating;
  RatingUsage: RatingUsage;
  Restaurant: Restaurant;
  Session: Session;
  Subscription: Subscription;
  TriedItem: TriedItem;
  User: User;
}
